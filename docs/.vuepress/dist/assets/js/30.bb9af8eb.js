(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{720:function(t,s,a){"use strict";a.r(s);var n=a(95),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"安装frps服务端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装frps服务端"}},[t._v("#")]),t._v(" 安装frps服务端：")]),t._v(" "),a("ol",[a("li",[t._v("新建一个存放目录")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" frps\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("拉取一键搭建脚本")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" --no-check-certificate https://raw.githubusercontent.com/clangcn/onekey-install-shell/master/frps/install-frps.sh -O ./install-frps.sh\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("增加脚本权限")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("700")]),t._v(" ./install-frps.sh\n\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("安装")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v(" ./install-frps.sh "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n \n")])])]),a("blockquote",[a("p",[t._v("之后他会让你输一些参数，全部参数都有默认值，直接回车就是输入默认值：")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("Please input frps bind_port "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("-65535"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Default Server Port: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5443")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输入frp提供服务的端口，用于服务器端和客户端通信，默认即可")]),t._v("\nPlease input frps vhost_http_port "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("-65535"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Default vhost_http_port: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输入frp进行http穿透的http服务端口，建议选择其他端口，默认的80端口给Nignx，然后用Nginx代理frp的http端口")]),t._v("\nPlease input frps vhost_https_port "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("-65535"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Default vhost_https_port: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输入frp进行https穿透的https服务端口，同上面的80端口类似，建议分配其他端口，然后通过Nginx代理此端口")]),t._v("\nPlease input frps dashboard_port "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("-65535"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Default dashboard_port: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6443")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输入frp的控制台服务端口，用于查看frp工作状态，默认即可")]),t._v("\n\nPlease input dashboard_user "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Default: admin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#登录控制台的用户名，默认即可")]),t._v("\nPlease input dashboard_pwd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Default: arepR7VZ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#登录控制台的密码，如果记不住默认的建议修改")]),t._v("\n\n\nPlease input privilege_token "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Default: 9e2UAeWa6hxrwdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输入frp服务器和客户端通信的密码，默认是随机生成的，默认即可")]),t._v("\nPlease input frps max_pool_count "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("-200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Default max_pool_count: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置每个代理可以创建的连接池上限，默认50")]),t._v("\n\n")])])]),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##### Please select log_level #####")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(": info\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(": warn\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(": error\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(": debug\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#####################################################")]),t._v("\nEnter your choice "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" or exit. default "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": 默认即可\nPlease input frps log_max_days "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("-30"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Default log_max_days: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" day"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": 默认即可\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##### Please select log_file #####")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(": disable\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#####################################################")]),t._v("\nEnter your choice "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" or exit. default "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":默认即可\n\n安装完毕后会弹出以下内容，标明了具体信息，到此服务端操作全部完成。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nYou Server IP      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" X.X.X.X\nBind port          "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5443")]),t._v("\nKCP support        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nvhost http port    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8085")]),t._v("\nvhost https port   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4435")]),t._v("\nDashboard port     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6443")]),t._v("\ntoken              "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 9e2UAeWa6hxrwdc\ntcp_mux            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nMax Pool count     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\nLog level          "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" info\nLog max days       "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nLog "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nfrps Dashboard     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" http://X.X.X.X:6443/\nDashboard user     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" admin\nDashboard password "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" admin\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n\n\nfrps status manage "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" frps "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("stop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("restart"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nExample:\n  start: frps start "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动frps命令")]),t._v("\n   stop: frps stop "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止frps命令")]),t._v("\nrestart: frps restart "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启frps命令")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@root frps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n \n")])])]),a("blockquote",[a("p",[t._v("至此，安装完成，可以访问ip地址+控制台端口查看（如果是阿里云腾讯云的服务器或者服务器已安装宝塔面板的，记得在安全组放行以上的配置的端口，否则无法访问），见下图")])]),t._v(" "),a("h1",{attrs:{id:"frp安装客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frp安装客户端"}},[t._v("#")]),t._v(" Frp安装客户端：")]),t._v(" "),a("blockquote",[a("p",[t._v("下载客户端软件：\nMac版本\nhttps://github.com/fatedier/frp/releases/download/v0.20.0/frp_0.20.0_darwin_amd64.tar.gz")])]),t._v(" "),a("blockquote",[a("p",[t._v("Win版本\nhttps://github.com/fatedier/frp/releases/download/v0.20.0/frp_0.20.0_windows_386.zip")])]),t._v(" "),a("blockquote",[a("p",[t._v("Linux版本\nhttps://github.com/fatedier/frp/releases/download/v0.20.0/frp_0.20.0_linux_amd64.tar.gz")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("\n下载完成后解压，找到 frpc.ini 文件\n修改 frpc.ini 文件，假设 frps 所在的服务器的 IP 为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1，local_port 为本地机器上 web 服务对应的端口, 绑定自定义域名mock.test.com\n以下为我本地的配置，可做参考：\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nserver_addr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\nserver_port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5443")]),t._v("\ntoken "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 9e2UAeWa6hxrwdc\n\n")])])]),a("h2",{attrs:{id:"通过tcp的方式可以不使用域名的情况下进行内网穿透-直接访问http-127-0-0-1-8080即可"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过tcp的方式可以不使用域名的情况下进行内网穿透-直接访问http-127-0-0-1-8080即可"}},[t._v("#")]),t._v(" 通过tcp的方式可以不使用域名的情况下进行内网穿透，直接访问http://127.0.0.1:8080即可")]),t._v(" "),a("h2",{attrs:{id:"tcp穿透需要设置remote-port-为将服务器的8080端口绑定到你的穿透服务-此处的8080端口也需要在防火墙中放开访问权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp穿透需要设置remote-port-为将服务器的8080端口绑定到你的穿透服务-此处的8080端口也需要在防火墙中放开访问权限"}},[t._v("#")]),t._v(" tcp穿透需要设置remote_port（为将服务器的8080端口绑定到你的穿透服务，此处的8080端口也需要在防火墙中放开访问权限）")]),t._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[mock-tcp]\ntype = tcp\nlocal_ip = 172.18.50.59\nlocal_port = 8089\nremote_port = 8080\n# custom_domains = mock.frp.test.com\n\n[mock-http]\ntype = http\nlocal_ip = 172.18.50.59\nlocal_port = 8089\ncustom_domains = mock.frp.test.com\n\n\n[web]\ntype = http\nlocal_ip = 172.18.50.59\nlocal_port = 8091\ncustom_domains = api.frp.test.com\n\n")])])]),a("blockquote",[a("p",[t._v("修改完成后，保存。然后启动 frpc")])]),t._v(" "),a("h2",{attrs:{id:"启动客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动客户端"}},[t._v("#")]),t._v(" 启动客户端：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# liunx启动客户端命令： ")]),t._v("\n./frpc -c ./frpc.ini    ---- ini文件与执行文件在同一目录\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# win启动客户端命令： ")]),t._v("\nfrpc.exe -c ./frpc.ini\n\n")])])]),a("blockquote",[a("p",[t._v("注意：frp.test.com这个二级域名需要提前在域名解析中进行A记录解析，见下图：\n通过浏览器访问 http://mock.frp.test.com:8085 即可访问到处于内网机器上的 web 服务。\n我们通过服务器控制台就可以看到有客户端已经连接了\n到此就完成了frp的客户端搭建和连接，完成了内网穿透服务。")])]),t._v(" "),a("h2",{attrs:{id:"设置客户端自启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置客户端自启动"}},[t._v("#")]),t._v(" 设置客户端自启动：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Linux下添加frp内网穿透工具开机启动")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在/etc/rc.local里面添加/home/frp/frps -c /home/frp/frps.ini (文件的具体路径根据实际情况填写),终端里面输入下面的命令，或者把文件下载回本地修改后重新上传覆盖源文件。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/rc.local\n \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Windows系统下添加frp内网穿透工具为开机启动项")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因为Windows系统下从命令行启动frp内网穿透工具后，如果关闭命令行的黑窗口，frp内网穿透服务就停止了，并且任务栏上一直有个命令行窗口也很不方便，所以要开机后启动并且要隐藏frp内网穿透工具的窗口，方法是这样的：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个文本文件，文件内写入如下内容，frp的文件路径根据自己的实际情况修改，然后重命名这个文本文件为frp.vbs ,注意txt的扩展名也要改为vbs，然后把这个frp.vbs放到Windows的启动目录里面。   ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Windows的启动目录位于“C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp”（如果找不到这个目录可以在CMD运行里面输入：     “shell:startup” 或者输入“%programdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup”）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ws")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WScript.CreateObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"WScript.Shell"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nws.Run "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d:'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\f"}},[t._v("\\f")]),t._v("rpc.exe -c d:"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\f"}},[t._v("\\f")]),t._v('rpc_net.ini"')]),t._v(",0\n\n")])])]),a("h2",{attrs:{id:"自定义域名访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义域名访问"}},[t._v("#")]),t._v(" 自定义域名访问：")]),t._v(" "),a("blockquote",[a("p",[t._v("上面我们发现连接内网还是需要 输入 8085端口，而且域名是nginx上配置的三级域名，其实我们可以通过Nginx来反向代理一下，这样就可以自己的顶级域名，并通过80端口来访问了。\n1、Nginx新建一个虚拟主机配置，或者直接改默认的主机配置也可以\n在Nignx 的listen 后 增加 default_server 配置，用来监听默认情况下所有来自解析到该服务器的域名\n然后在 server 段内增加 反向代理配置\n在nginx子配置文件目录下新增一个名为：frps.conf文件\n"),a("code",[t._v("vim frps.conf")])])]),t._v(" "),a("h2",{attrs:{id:"frps内网穿透服务-测试服务为mock服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frps内网穿透服务-测试服务为mock服务"}},[t._v("#")]),t._v(" frps内网穿透服务--测试服务为mock服务")]),t._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("server{\n    listen 80;\n    listen 8086;\n    listen 443 ssl http2;\n    server_name mock.frp.test.com;\n    location /{\n       proxy_redirect off;\n       proxy_set_header Host $host;\n       proxy_set_header X-Real-IP $remote_addr;\n       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n       proxy_read_timeout 300;\n       proxy_pass http://127.0.0.1:8085;\n       access_log /www/wwwlogs/access8085.log;\n       error_log /www/wwwlogs/access_error8085.log;\n    }\n}\n \n\n; 这样Nginx 将接管域名的绑定工作，监听到80端口的网站后，会将网站转发到 本机的frp 8085 端口\n\n")])])]),a("h2",{attrs:{id:"frp进阶配置-未实际测试-摘抄于原作者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frp进阶配置-未实际测试-摘抄于原作者"}},[t._v("#")]),t._v(" frp进阶配置（未实际测试，摘抄于原作者）：")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 1、转发 DNS 查询请求")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; DNS 查询请求通常使用 UDP 协议，frp 支持对内网 UDP 服务的穿透，配置方式和 TCP 基本一致。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 修改 frpc.ini 文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("  [common]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  server_addr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 180.28.83.22 #这里是服务器的IP")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  server_port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 5443 #服务器的连接端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  token")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" LnDeMkeiIedDeDw #服务器的连接Token")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("  [dns]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" udp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  local_ip")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 8.8.8.8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  local_port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 53")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  remote_port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 6000")]),t._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";   2、转发 Unix域套接字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 通过 tcp 端口访问内网的 unix域套接字(例如和 docker daemon 通信)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; frps 的部署步骤同上。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 启动 frpc，启用 unix_domain_socket 插件，配置如下：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("  [common]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  server_addr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 180.28.83.22 #这里是服务器的IP")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  server_port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 5443 #服务器的连接端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  token")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" LnDeMkeiIedDeDw #服务器的连接Token")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("  [unix_domain_socket]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" tcp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  remote_port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 6000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  plugin")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" unix_domain_socket")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v(" plugin_unix_path")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" /var/run/docker.sock")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 通过 curl 命令查看 docker 版本信息")]),t._v("\ncurl http://x.x.x.x:6000/version\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 3、win系统远程桌面")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 通过tcp 来连接位于内网中的电脑，配置如下：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("  [common]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  server_addr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 180.28.83.22 #这里是服务器的IP")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  server_port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 5443 #服务器的连接端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  token")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" LnDeMkeiIedDeDw #服务器的连接Token")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("  [dns]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" tcp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  local_ip")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 127.0.0.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("  local_port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 3389")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v(" remote_port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 33890")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 然后通过 mstsc -v 180.28.83.22:33890 就可以远程桌面到内网。")]),t._v("\n\n\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);